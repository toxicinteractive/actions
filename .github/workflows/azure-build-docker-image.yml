# shared workflow to build a web app container image with versioning and push it to an azure container registry
# the image will be tagged according to the latest git commit or tag

name: Build and push web app container image to Azure

on:
  workflow_call:
    inputs:
      registry-name: 
        required: true
        type: string

      image-name:
        required: true
        type: string

    secrets:
      registry-password:
        required: true

    outputs:
      tags:
        value: ${{ jobs.build.outputs.tags }}

jobs:
  build:
    name: ðŸ› 
    runs-on: ubuntu-latest

    outputs:
      tags: ${{ steps.export-tags.outputs.tags }}

    steps:
      - uses: actions/checkout@v3

      # generate image tag based on the latest git commit/tag
      - name: Generate version numbers
        id: generate-version-tags
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry-name }}.azurecr.io/${{ inputs.registry-name }}/${{ inputs.image-name }}
          tags: |
            type=ref,event=branch,suffix=-{{ sha }}-{{ date 'YYMMDDHHmm' }}
            type=ref,event=pr,suffix=-{{ sha }}-{{ date 'YYMMDDHHmm' }}
            type=semver,pattern={{ version }}-{{ date 'YYMMDDHHmm' }}
          flavor: |
            latest=false
        
      # output tag versions to caller workflow
      - name: Export version numbers
        id: export-tags
        run: echo "::set-output name=tags::${{ steps.generate-version-tags.outputs.tags }}"

      # setup buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # log in to azure acr
      - name: Log in to Azure container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: https://${{ inputs.registry-name }}.azurecr.io/
          username: ${{ inputs.registry-name }}
          password: ${{ secrets.registry-password }}

      # build and push container to acr
      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.generate-version-tags.outputs.tags }}
          file: ./Dockerfile